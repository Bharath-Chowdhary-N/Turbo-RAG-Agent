name: Vector Database CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CHROMA_PERSIST_DIR: ./chroma_db
  PYTHON_VERSION: '3.10'

jobs:
  vector-processing:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: pip-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          pip-${{ runner.os }}-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    # ALWAYS USE TEST MODE FOR NOW (fast processing)
    - name: Process Vectors (Test Mode)
      run: |
        echo "üß™ Running in TEST mode - processing only 10 files for speed"
        python ci_vector_processor.py --data-dir ./data --test-mode
      timeout-minutes: 10
    
    # WHEN YOU WANT FULL PROCESSING, COMMENT OUT THE ABOVE STEP AND UNCOMMENT THIS:
    # - name: Process Vectors (Full Mode)
    #   run: |
    #     echo "üöÄ Running FULL processing - processing ALL files"
    #     python ci_vector_processor.py --data-dir ./data
    #   timeout-minutes: 120
    
    - name: Validate Processing Results
      run: |
        if [ -f "processing_results.json" ]; then
          echo "‚úÖ Processing completed successfully!"
          cat processing_results.json | python -m json.tool
        else
          echo "‚ùå No processing results file found!"
          exit 1
        fi
    
    - name: Upload Processing Results
      uses: actions/upload-artifact@v4
      with:
        name: processing-results
        path: processing_results.json
    
    - name: Slack Notification
      if: always()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_TITLE: 'Vector DB Processing Complete'
        SLACK_MESSAGE: |
          Status: ${{ job.status == 'success' && '‚úÖ Success' || '‚ùå Failed' }}
          Mode: Test Mode (10 files only)
          Branch: ${{ github.ref_name }}
          Commit: ${{ github.sha }}
        SLACK_COLOR: ${{ job.status == 'success' && 'good' || 'danger' }}
